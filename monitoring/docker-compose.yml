
services:
#OK
  grafana:
    image: grafana/grafana:11.3.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana 
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/

#    restart: unless-stopped 
    environment:
      - 'GF_SMTP_ENABLED=${SMTP_ENBL}'
      - 'GF_SMTP_HOST=${SMTP_HOST}'
      - 'GF_SMTP_USER=${SMTP_USER}'
      - 'GF_SMTP_PASSWORD=${SMTP_PASS}'
      - 'GF_SMTP_SKIP_VERIFY=${SMTP_SKIP_VERIFY}'
      - 'GF_SMTP_FROM_NAME=${SMTP_NAME}'
      - 'GF_SMTP_FROM_ADDRESS=${SMTP_USER}'
      - GF_SERVER_ROOT_URL=http://192.168.3.32/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true

      - GF_AUTH_DISABLE_LOGIN_FORM=“true”
      - GF_AUTH_ANONYMOUS_ENABLED=“true”
      - GF_AUTH_ANONYMOUS_ORG_ROLE=“Admin”
      - GF_USERS_DEFAULT_THEME=light
    networks:
      - nginx
      - monitoring
# OK
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules:/etc/prometheus/alert.rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

#NEOK

  alertmanager-bot:
    command:
      - --alertmanager.url=${TG_BOT_URL}
      - --log.level=${TG_BOT_LOG}
      - --store=${TG_BOT_STORE}
      - --bolt.path=${TG_BOT_PATH}
      - --telegram.admin=${TG_BOT_ADMIN}
      - --telegram.token=${TG_BOT_TOKEN}
      - --listen.addr=${TG_BOT_ADDR}
    image: metalmatze/alertmanager-bot:0.4.3
    user: root
    ports:
      - 8888:8888
    container_name: alertmanager-bot
    hostname: alertmanager-bot
    environment:
      TG_BOT_URL: ${TG_BOT_URL}
      TG_BOT_STORE: ${TG_BOT_STORE}
      TG_BOT_PATH: ${TG_BOT_PATH}
      TG_BOT_ADMIN: ${TG_BOT_ADMIN}
      TG_BOT_TOKEN: ${TG_BOT_TOKEN}
      TG_BOT_ADDR: ${TG_BOT_ADDR}
      TZ: "Europe/Moscow"
    restart: unless-stopped
    volumes:
      - ./bot-data:/data
    networks:
      - monitoring

#OK?

  alertmanager:
    image: prom/alertmanager:v0.21.0
    user: root
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    container_name: alertmanager
    hostname: alertmanager
    environment:
      TZ: "Europe/Moscow"
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/etc/alertmanager/data'
    networks:
      - monitoring

#NEOK?

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -validation.allow-structured-metadata=false
    networks:
      - monitoring


networks:
  monitoring:
    external: true
    name: monitoring-net
  nginx:
    external: true
    name: nginx

volumes:
  prometheus_data: {}
  grafana-storage: {}
